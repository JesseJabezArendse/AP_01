ARM GAS  C:\Temp\cc5NKWQB.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB139:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "iks02a1_motion_sensors.h"
  25:Core/Src/main.c **** #include "IKS02A1_Simulink.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Temp\cc5NKWQB.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** UART_HandleTypeDef huart3;
  49:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart3_rx;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** PCD_HandleTypeDef hpcd_USB_FS;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** IKS02A1_MOTION_SENSOR_Axes_t accel1_axis;
  55:Core/Src/main.c **** IKS02A1_MOTION_SENSOR_Axes_t gyro_axis;
  56:Core/Src/main.c **** IKS02A1_MOTION_SENSOR_Axes_t accel2_axis;
  57:Core/Src/main.c **** IKS02A1_MOTION_SENSOR_Axes_t mag_axis;
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** static void MX_GPIO_Init(void);
  63:Core/Src/main.c **** static void MX_DMA_Init(void);
  64:Core/Src/main.c **** static void MX_RTC_Init(void);
  65:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  66:Core/Src/main.c **** static void MX_USB_PCD_Init(void);
  67:Core/Src/main.c **** static void MX_TIM2_Init(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** // #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** const uint8_t expectedHeader[3] = {'J', '_', 'A'};
  75:Core/Src/main.c **** const uint8_t expectedTerminator[3] = {'A', '_', 'J'};
  76:Core/Src/main.c **** const int numberOfSimulinkBytes = 4*(2);
  77:Core/Src/main.c **** uint8_t bigBuffer[8+3+3] = {0};
  78:Core/Src/main.c **** uint8_t clearToSend = 0;
  79:Core/Src/main.c **** uint8_t calibrated = 0;
  80:Core/Src/main.c **** int32_t counter = 0;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** extern float accel2_odr;
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** void configureTimer(float desired_frequency) {
  85:Core/Src/main.c ****     // Assuming the clock frequency driving the timer is 100 MHz
  86:Core/Src/main.c ****     float clock_frequency = 100000000.0f; // 100 MHz
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****     // Calculate the required total timer period in timer clock cycles
ARM GAS  C:\Temp\cc5NKWQB.s 			page 3


  89:Core/Src/main.c ****     float timer_period = clock_frequency / desired_frequency;
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****     // Choose a suitable prescaler (PSC) to fit the period within ARR's range
  92:Core/Src/main.c ****     uint32_t prescaler = (uint32_t)(timer_period / 65536.0f); // PSC ensures ARR <= 65535
  93:Core/Src/main.c ****     if (prescaler > 65535) {
  94:Core/Src/main.c ****         prescaler = 65535; // Cap PSC if it exceeds 16-bit value
  95:Core/Src/main.c ****     }
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****     // Calculate the ARR based on the chosen PSC
  98:Core/Src/main.c ****     uint32_t arr = (uint32_t)(timer_period / (prescaler + 1));
  99:Core/Src/main.c ****     if (arr > 65535) {
 100:Core/Src/main.c ****         arr = 65535; // Cap ARR if it exceeds 16-bit value
 101:Core/Src/main.c ****     }
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****     // Update the timer registers
 104:Core/Src/main.c ****     TIM2->PSC = prescaler;   // Set the prescaler
 105:Core/Src/main.c ****     TIM2->ARR = arr;         // Set the auto-reload register
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     // Reload the timer settings to apply the changes immediately
 108:Core/Src/main.c ****     TIM2->EGR = TIM_EGR_UG;  // Generate an update event to reload PSC and ARR
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** void initialCalibration(){
 112:Core/Src/main.c ****   HAL_UART_Receive(&huart3,(uint8_t *) &bigBuffer, (size_t) (numberOfSimulinkBytes+3+3),HAL_MAX_DEL
 113:Core/Src/main.c ****   if (bigBuffer[0] == expectedHeader[0] &&
 114:Core/Src/main.c ****       bigBuffer[1] == expectedHeader[1] &&
 115:Core/Src/main.c ****       bigBuffer[2] == expectedHeader[2] &&
 116:Core/Src/main.c ****       bigBuffer[numberOfSimulinkBytes+3+0] == expectedTerminator[0] &&
 117:Core/Src/main.c ****       bigBuffer[numberOfSimulinkBytes+3+1] == expectedTerminator[1] &&
 118:Core/Src/main.c ****       bigBuffer[numberOfSimulinkBytes+3+2] == expectedTerminator[2]){
 119:Core/Src/main.c ****         if (calibrated == 0){
 120:Core/Src/main.c ****           receivedFromSimulink(&bigBuffer);
 121:Core/Src/main.c ****           HAL_GPIO_WritePin(GREEN_LED_GPIO_Port,GREEN_LED_Pin,1);
 122:Core/Src/main.c ****           calibrated = 1;
 123:Core/Src/main.c ****           configureTimer(accel2_odr);
 124:Core/Src/main.c ****           HAL_TIM_Base_Start_IT(&htim2);
 125:Core/Src/main.c ****         }
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /* USER CODE END 0 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /**
 132:Core/Src/main.c ****   * @brief  The application entry point.
 133:Core/Src/main.c ****   * @retval int
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c **** int main(void)
 136:Core/Src/main.c **** {
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE END 1 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 145:Core/Src/main.c ****   HAL_Init();
ARM GAS  C:\Temp\cc5NKWQB.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* USER CODE END Init */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* Configure the system clock */
 152:Core/Src/main.c ****   SystemClock_Config();
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 155:Core/Src/main.c ****   HAL_GPIO_WritePin(GREEN_LED_GPIO_Port,GREEN_LED_Pin,0);
 156:Core/Src/main.c ****   /* USER CODE END SysInit */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* Initialize all configured peripherals */
 159:Core/Src/main.c ****   MX_GPIO_Init();
 160:Core/Src/main.c ****   MX_DMA_Init();
 161:Core/Src/main.c ****   MX_RTC_Init();
 162:Core/Src/main.c ****   MX_USART3_UART_Init();
 163:Core/Src/main.c ****   MX_USB_PCD_Init();
 164:Core/Src/main.c ****   MX_TIM2_Init();
 165:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 166:Core/Src/main.c ****   initIKS02A1();
 167:Core/Src/main.c ****   while (calibrated != 1){
 168:Core/Src/main.c ****     initialCalibration();
 169:Core/Src/main.c ****   }
 170:Core/Src/main.c ****   
 171:Core/Src/main.c ****   /* USER CODE END 2 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* Infinite loop */
 174:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   while (1)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     getIKS02A1();
 179:Core/Src/main.c ****   
 180:Core/Src/main.c ****     
 181:Core/Src/main.c ****     /* USER CODE END WHILE */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c ****   /* USER CODE END 3 */
 186:Core/Src/main.c **** }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /**
 189:Core/Src/main.c ****   * @brief System Clock Configuration
 190:Core/Src/main.c ****   * @retval None
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c **** void SystemClock_Config(void)
 193:Core/Src/main.c **** {
 194:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 195:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 196:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 199:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI
 202:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSE;
ARM GAS  C:\Temp\cc5NKWQB.s 			page 5


 203:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 204:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 205:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 206:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 211:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 219:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 220:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 221:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 223:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_USART3
 230:Core/Src/main.c ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_RTC
 231:Core/Src/main.c ****                               |RCC_PERIPHCLK_TIM2;
 232:Core/Src/main.c ****   PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 233:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 234:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 235:Core/Src/main.c ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 236:Core/Src/main.c ****   PeriphClkInit.Tim2ClockSelection = RCC_TIM2CLK_HCLK;
 237:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief RTC Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_RTC_Init(void)
 249:Core/Src/main.c **** {
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /** Initialize RTC Only
ARM GAS  C:\Temp\cc5NKWQB.s 			page 6


 260:Core/Src/main.c ****   */
 261:Core/Src/main.c ****   hrtc.Instance = RTC;
 262:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 263:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 264:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 265:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 266:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 267:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 268:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 269:Core/Src/main.c ****   {
 270:Core/Src/main.c ****     Error_Handler();
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /**
 279:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 280:Core/Src/main.c ****   * @param None
 281:Core/Src/main.c ****   * @retval None
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c **** static void MX_TIM2_Init(void)
 284:Core/Src/main.c **** {
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 291:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 296:Core/Src/main.c ****   htim2.Instance = TIM2;
 297:Core/Src/main.c ****   htim2.Init.Prescaler = 100-1;
 298:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 299:Core/Src/main.c ****   htim2.Init.Period = 100-1;
 300:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 301:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 302:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 307:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****     Error_Handler();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 312:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 313:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 316:Core/Src/main.c ****   }
ARM GAS  C:\Temp\cc5NKWQB.s 			page 7


 317:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** /**
 324:Core/Src/main.c ****   * @brief USART3 Initialization Function
 325:Core/Src/main.c ****   * @param None
 326:Core/Src/main.c ****   * @retval None
 327:Core/Src/main.c ****   */
 328:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 329:Core/Src/main.c **** {
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 338:Core/Src/main.c ****   huart3.Instance = USART3;
 339:Core/Src/main.c ****   huart3.Init.BaudRate = 1843200;
 340:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_9B;
 341:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_2;
 342:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_EVEN;
 343:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 344:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 345:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 346:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 347:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 348:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     Error_Handler();
 351:Core/Src/main.c ****   }
 352:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** }
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** /**
 359:Core/Src/main.c ****   * @brief USB Initialization Function
 360:Core/Src/main.c ****   * @param None
 361:Core/Src/main.c ****   * @retval None
 362:Core/Src/main.c ****   */
 363:Core/Src/main.c **** static void MX_USB_PCD_Init(void)
 364:Core/Src/main.c **** {
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE BEGIN USB_Init 0 */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /* USER CODE END USB_Init 0 */
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   /* USER CODE BEGIN USB_Init 1 */
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   /* USER CODE END USB_Init 1 */
 373:Core/Src/main.c ****   hpcd_USB_FS.Instance = USB;
ARM GAS  C:\Temp\cc5NKWQB.s 			page 8


 374:Core/Src/main.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 375:Core/Src/main.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 376:Core/Src/main.c ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 377:Core/Src/main.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 378:Core/Src/main.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 379:Core/Src/main.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 380:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 381:Core/Src/main.c ****   {
 382:Core/Src/main.c ****     Error_Handler();
 383:Core/Src/main.c ****   }
 384:Core/Src/main.c ****   /* USER CODE BEGIN USB_Init 2 */
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /* USER CODE END USB_Init 2 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** }
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** /**
 391:Core/Src/main.c ****   * Enable DMA controller clock
 392:Core/Src/main.c ****   */
 393:Core/Src/main.c **** static void MX_DMA_Init(void)
 394:Core/Src/main.c **** {
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* DMA controller clock enable */
 397:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /* DMA interrupt init */
 400:Core/Src/main.c ****   /* DMA1_Channel3_IRQn interrupt configuration */
 401:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 402:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** }
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** /**
 407:Core/Src/main.c ****   * @brief GPIO Initialization Function
 408:Core/Src/main.c ****   * @param None
 409:Core/Src/main.c ****   * @retval None
 410:Core/Src/main.c ****   */
 411:Core/Src/main.c **** static void MX_GPIO_Init(void)
 412:Core/Src/main.c **** {
  28              		.loc 1 412 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 56
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 8EB0     		sub	sp, sp, #56
  41              		.cfi_def_cfa_offset 80
 413:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 413 3 view .LVU1
  43              		.loc 1 413 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
ARM GAS  C:\Temp\cc5NKWQB.s 			page 9


  45 0008 0994     		str	r4, [sp, #36]
  46 000a 0A94     		str	r4, [sp, #40]
  47 000c 0B94     		str	r4, [sp, #44]
  48 000e 0C94     		str	r4, [sp, #48]
  49 0010 0D94     		str	r4, [sp, #52]
 414:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 415:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 418:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  50              		.loc 1 418 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 418 3 view .LVU4
  53              		.loc 1 418 3 view .LVU5
  54 0012 674B     		ldr	r3, .L3
  55 0014 5A69     		ldr	r2, [r3, #20]
  56 0016 42F40012 		orr	r2, r2, #2097152
  57 001a 5A61     		str	r2, [r3, #20]
  58              		.loc 1 418 3 view .LVU6
  59 001c 5A69     		ldr	r2, [r3, #20]
  60 001e 02F40012 		and	r2, r2, #2097152
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 418 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 418 3 view .LVU8
 419:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  66              		.loc 1 419 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 419 3 view .LVU10
  69              		.loc 1 419 3 view .LVU11
  70 0026 5A69     		ldr	r2, [r3, #20]
  71 0028 42F40022 		orr	r2, r2, #524288
  72 002c 5A61     		str	r2, [r3, #20]
  73              		.loc 1 419 3 view .LVU12
  74 002e 5A69     		ldr	r2, [r3, #20]
  75 0030 02F40022 		and	r2, r2, #524288
  76 0034 0292     		str	r2, [sp, #8]
  77              		.loc 1 419 3 view .LVU13
  78 0036 029A     		ldr	r2, [sp, #8]
  79              	.LBE5:
  80              		.loc 1 419 3 view .LVU14
 420:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  81              		.loc 1 420 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 420 3 view .LVU16
  84              		.loc 1 420 3 view .LVU17
  85 0038 5A69     		ldr	r2, [r3, #20]
  86 003a 42F48032 		orr	r2, r2, #65536
  87 003e 5A61     		str	r2, [r3, #20]
  88              		.loc 1 420 3 view .LVU18
  89 0040 5A69     		ldr	r2, [r3, #20]
  90 0042 02F48032 		and	r2, r2, #65536
  91 0046 0392     		str	r2, [sp, #12]
  92              		.loc 1 420 3 view .LVU19
  93 0048 039A     		ldr	r2, [sp, #12]
  94              	.LBE6:
ARM GAS  C:\Temp\cc5NKWQB.s 			page 10


  95              		.loc 1 420 3 view .LVU20
 421:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  96              		.loc 1 421 3 view .LVU21
  97              	.LBB7:
  98              		.loc 1 421 3 view .LVU22
  99              		.loc 1 421 3 view .LVU23
 100 004a 5A69     		ldr	r2, [r3, #20]
 101 004c 42F48002 		orr	r2, r2, #4194304
 102 0050 5A61     		str	r2, [r3, #20]
 103              		.loc 1 421 3 view .LVU24
 104 0052 5A69     		ldr	r2, [r3, #20]
 105 0054 02F48002 		and	r2, r2, #4194304
 106 0058 0492     		str	r2, [sp, #16]
 107              		.loc 1 421 3 view .LVU25
 108 005a 049A     		ldr	r2, [sp, #16]
 109              	.LBE7:
 110              		.loc 1 421 3 view .LVU26
 422:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 111              		.loc 1 422 3 view .LVU27
 112              	.LBB8:
 113              		.loc 1 422 3 view .LVU28
 114              		.loc 1 422 3 view .LVU29
 115 005c 5A69     		ldr	r2, [r3, #20]
 116 005e 42F40032 		orr	r2, r2, #131072
 117 0062 5A61     		str	r2, [r3, #20]
 118              		.loc 1 422 3 view .LVU30
 119 0064 5A69     		ldr	r2, [r3, #20]
 120 0066 02F40032 		and	r2, r2, #131072
 121 006a 0592     		str	r2, [sp, #20]
 122              		.loc 1 422 3 view .LVU31
 123 006c 059A     		ldr	r2, [sp, #20]
 124              	.LBE8:
 125              		.loc 1 422 3 view .LVU32
 423:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 126              		.loc 1 423 3 view .LVU33
 127              	.LBB9:
 128              		.loc 1 423 3 view .LVU34
 129              		.loc 1 423 3 view .LVU35
 130 006e 5A69     		ldr	r2, [r3, #20]
 131 0070 42F48022 		orr	r2, r2, #262144
 132 0074 5A61     		str	r2, [r3, #20]
 133              		.loc 1 423 3 view .LVU36
 134 0076 5A69     		ldr	r2, [r3, #20]
 135 0078 02F48022 		and	r2, r2, #262144
 136 007c 0692     		str	r2, [sp, #24]
 137              		.loc 1 423 3 view .LVU37
 138 007e 069A     		ldr	r2, [sp, #24]
 139              	.LBE9:
 140              		.loc 1 423 3 view .LVU38
 424:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 141              		.loc 1 424 3 view .LVU39
 142              	.LBB10:
 143              		.loc 1 424 3 view .LVU40
 144              		.loc 1 424 3 view .LVU41
 145 0080 5A69     		ldr	r2, [r3, #20]
 146 0082 42F40002 		orr	r2, r2, #8388608
 147 0086 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Temp\cc5NKWQB.s 			page 11


 148              		.loc 1 424 3 view .LVU42
 149 0088 5A69     		ldr	r2, [r3, #20]
 150 008a 02F40002 		and	r2, r2, #8388608
 151 008e 0792     		str	r2, [sp, #28]
 152              		.loc 1 424 3 view .LVU43
 153 0090 079A     		ldr	r2, [sp, #28]
 154              	.LBE10:
 155              		.loc 1 424 3 view .LVU44
 425:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 156              		.loc 1 425 3 view .LVU45
 157              	.LBB11:
 158              		.loc 1 425 3 view .LVU46
 159              		.loc 1 425 3 view .LVU47
 160 0092 5A69     		ldr	r2, [r3, #20]
 161 0094 42F48012 		orr	r2, r2, #1048576
 162 0098 5A61     		str	r2, [r3, #20]
 163              		.loc 1 425 3 view .LVU48
 164 009a 5B69     		ldr	r3, [r3, #20]
 165 009c 03F48013 		and	r3, r3, #1048576
 166 00a0 0893     		str	r3, [sp, #32]
 167              		.loc 1 425 3 view .LVU49
 168 00a2 089B     		ldr	r3, [sp, #32]
 169              	.LBE11:
 170              		.loc 1 425 3 view .LVU50
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 428:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GREEN_LED_Pin|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 171              		.loc 1 428 3 view .LVU51
 172 00a4 434F     		ldr	r7, .L3+4
 173 00a6 2246     		mov	r2, r4
 174 00a8 44F28101 		movw	r1, #16513
 175 00ac 3846     		mov	r0, r7
 176 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 177              	.LVL0:
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 431:Core/Src/main.c ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 178              		.loc 1 431 3 view .LVU52
 179 00b2 414E     		ldr	r6, .L3+8
 180 00b4 2246     		mov	r2, r4
 181 00b6 4021     		movs	r1, #64
 182 00b8 3046     		mov	r0, r6
 183 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 184              	.LVL1:
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /*Configure GPIO pins : PE2 PE3 PE4 PE5
 434:Core/Src/main.c ****                            PE6 PE7 PE8 PE9
 435:Core/Src/main.c ****                            PE10 PE11 PE12 PE13
 436:Core/Src/main.c ****                            PE14 PE15 PE0 PE1 */
 437:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 185              		.loc 1 437 3 view .LVU53
 186              		.loc 1 437 23 is_stmt 0 view .LVU54
 187 00be 4FF6FF73 		movw	r3, #65535
 188 00c2 0993     		str	r3, [sp, #36]
 438:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9
 439:Core/Src/main.c ****                           |GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13
 440:Core/Src/main.c ****                           |GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
ARM GAS  C:\Temp\cc5NKWQB.s 			page 12


 441:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 189              		.loc 1 441 3 is_stmt 1 view .LVU55
 190              		.loc 1 441 24 is_stmt 0 view .LVU56
 191 00c4 0325     		movs	r5, #3
 192 00c6 0A95     		str	r5, [sp, #40]
 442:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 193              		.loc 1 442 3 is_stmt 1 view .LVU57
 194              		.loc 1 442 24 is_stmt 0 view .LVU58
 195 00c8 0B94     		str	r4, [sp, #44]
 443:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 196              		.loc 1 443 3 is_stmt 1 view .LVU59
 197 00ca 09A9     		add	r1, sp, #36
 198 00cc 3B48     		ldr	r0, .L3+12
 199 00ce FFF7FEFF 		bl	HAL_GPIO_Init
 200              	.LVL2:
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /*Configure GPIO pin : USER_Btn_Pin */
 446:Core/Src/main.c ****   GPIO_InitStruct.Pin = USER_Btn_Pin;
 201              		.loc 1 446 3 view .LVU60
 202              		.loc 1 446 23 is_stmt 0 view .LVU61
 203 00d2 4FF40053 		mov	r3, #8192
 204 00d6 0993     		str	r3, [sp, #36]
 447:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 205              		.loc 1 447 3 is_stmt 1 view .LVU62
 206              		.loc 1 447 24 is_stmt 0 view .LVU63
 207 00d8 4FF48813 		mov	r3, #1114112
 208 00dc 0A93     		str	r3, [sp, #40]
 448:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 209              		.loc 1 448 3 is_stmt 1 view .LVU64
 210              		.loc 1 448 24 is_stmt 0 view .LVU65
 211 00de 0B94     		str	r4, [sp, #44]
 449:Core/Src/main.c ****   HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 212              		.loc 1 449 3 is_stmt 1 view .LVU66
 213 00e0 DFF8E880 		ldr	r8, .L3+28
 214 00e4 09A9     		add	r1, sp, #36
 215 00e6 4046     		mov	r0, r8
 216 00e8 FFF7FEFF 		bl	HAL_GPIO_Init
 217              	.LVL3:
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /*Configure GPIO pins : PH0 PH1 PH2 */
 452:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 218              		.loc 1 452 3 view .LVU67
 219              		.loc 1 452 23 is_stmt 0 view .LVU68
 220 00ec 0723     		movs	r3, #7
 221 00ee 0993     		str	r3, [sp, #36]
 453:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 222              		.loc 1 453 3 is_stmt 1 view .LVU69
 223              		.loc 1 453 24 is_stmt 0 view .LVU70
 224 00f0 0A95     		str	r5, [sp, #40]
 454:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 225              		.loc 1 454 3 is_stmt 1 view .LVU71
 226              		.loc 1 454 24 is_stmt 0 view .LVU72
 227 00f2 0B94     		str	r4, [sp, #44]
 455:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 228              		.loc 1 455 3 is_stmt 1 view .LVU73
 229 00f4 09A9     		add	r1, sp, #36
 230 00f6 3248     		ldr	r0, .L3+16
ARM GAS  C:\Temp\cc5NKWQB.s 			page 13


 231 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 232              	.LVL4:
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /*Configure GPIO pins : PF2 PF3 PF4 PF5
 458:Core/Src/main.c ****                            PF6 PF7 PF8 PF9
 459:Core/Src/main.c ****                            PF10 PF1 PF11 PF12
 460:Core/Src/main.c ****                            PF13 PF14 PF15 */
 461:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 233              		.loc 1 461 3 view .LVU74
 234              		.loc 1 461 23 is_stmt 0 view .LVU75
 235 00fc 4FF6FE73 		movw	r3, #65534
 236 0100 0993     		str	r3, [sp, #36]
 462:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9
 463:Core/Src/main.c ****                           |GPIO_PIN_10|GPIO_PIN_1|GPIO_PIN_11|GPIO_PIN_12
 464:Core/Src/main.c ****                           |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 465:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 237              		.loc 1 465 3 is_stmt 1 view .LVU76
 238              		.loc 1 465 24 is_stmt 0 view .LVU77
 239 0102 0A95     		str	r5, [sp, #40]
 466:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 240              		.loc 1 466 3 is_stmt 1 view .LVU78
 241              		.loc 1 466 24 is_stmt 0 view .LVU79
 242 0104 0B94     		str	r4, [sp, #44]
 467:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 243              		.loc 1 467 3 is_stmt 1 view .LVU80
 244 0106 09A9     		add	r1, sp, #36
 245 0108 2E48     		ldr	r0, .L3+20
 246 010a FFF7FEFF 		bl	HAL_GPIO_Init
 247              	.LVL5:
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /*Configure GPIO pins : PC0 PC1 PC2 PC3
 470:Core/Src/main.c ****                            PC4 PC5 PC6 PC7
 471:Core/Src/main.c ****                            PC8 PC9 PC10 PC11
 472:Core/Src/main.c ****                            PC12 */
 473:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 248              		.loc 1 473 3 view .LVU81
 249              		.loc 1 473 23 is_stmt 0 view .LVU82
 250 010e 41F6FF73 		movw	r3, #8191
 251 0112 0993     		str	r3, [sp, #36]
 474:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
 475:Core/Src/main.c ****                           |GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 476:Core/Src/main.c ****                           |GPIO_PIN_12;
 477:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 252              		.loc 1 477 3 is_stmt 1 view .LVU83
 253              		.loc 1 477 24 is_stmt 0 view .LVU84
 254 0114 0A95     		str	r5, [sp, #40]
 478:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 255              		.loc 1 478 3 is_stmt 1 view .LVU85
 256              		.loc 1 478 24 is_stmt 0 view .LVU86
 257 0116 0B94     		str	r4, [sp, #44]
 479:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 258              		.loc 1 479 3 is_stmt 1 view .LVU87
 259 0118 09A9     		add	r1, sp, #36
 260 011a 4046     		mov	r0, r8
 261 011c FFF7FEFF 		bl	HAL_GPIO_Init
 262              	.LVL6:
 480:Core/Src/main.c **** 
ARM GAS  C:\Temp\cc5NKWQB.s 			page 14


 481:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA2 PA3
 482:Core/Src/main.c ****                            PA4 PA5 PA6 PA7
 483:Core/Src/main.c ****                            PA8 PA9 PA10 PA15 */
 484:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 263              		.loc 1 484 3 view .LVU88
 264              		.loc 1 484 23 is_stmt 0 view .LVU89
 265 0120 48F2FF73 		movw	r3, #34815
 266 0124 0993     		str	r3, [sp, #36]
 485:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
 486:Core/Src/main.c ****                           |GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_15;
 487:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 267              		.loc 1 487 3 is_stmt 1 view .LVU90
 268              		.loc 1 487 24 is_stmt 0 view .LVU91
 269 0126 0A95     		str	r5, [sp, #40]
 488:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 270              		.loc 1 488 3 is_stmt 1 view .LVU92
 271              		.loc 1 488 24 is_stmt 0 view .LVU93
 272 0128 0B94     		str	r4, [sp, #44]
 489:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 273              		.loc 1 489 3 is_stmt 1 view .LVU94
 274 012a 09A9     		add	r1, sp, #36
 275 012c 4FF09040 		mov	r0, #1207959552
 276 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 277              	.LVL7:
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /*Configure GPIO pins : GREEN_LED_Pin LD3_Pin LD2_Pin */
 492:Core/Src/main.c ****   GPIO_InitStruct.Pin = GREEN_LED_Pin|LD3_Pin|LD2_Pin;
 278              		.loc 1 492 3 view .LVU95
 279              		.loc 1 492 23 is_stmt 0 view .LVU96
 280 0134 44F28103 		movw	r3, #16513
 281 0138 0993     		str	r3, [sp, #36]
 493:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 282              		.loc 1 493 3 is_stmt 1 view .LVU97
 283              		.loc 1 493 24 is_stmt 0 view .LVU98
 284 013a 4FF00108 		mov	r8, #1
 285 013e CDF82880 		str	r8, [sp, #40]
 494:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 286              		.loc 1 494 3 is_stmt 1 view .LVU99
 287              		.loc 1 494 24 is_stmt 0 view .LVU100
 288 0142 0B94     		str	r4, [sp, #44]
 495:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 289              		.loc 1 495 3 is_stmt 1 view .LVU101
 290              		.loc 1 495 25 is_stmt 0 view .LVU102
 291 0144 0C94     		str	r4, [sp, #48]
 496:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 292              		.loc 1 496 3 is_stmt 1 view .LVU103
 293 0146 09A9     		add	r1, sp, #36
 294 0148 3846     		mov	r0, r7
 295 014a FFF7FEFF 		bl	HAL_GPIO_Init
 296              	.LVL8:
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /*Configure GPIO pins : PB1 PB2 PB10 PB11
 499:Core/Src/main.c ****                            PB12 PB13 PB15 PB4
 500:Core/Src/main.c ****                            PB5 PB6 */
 501:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10|GPIO_PIN_11
 297              		.loc 1 501 3 view .LVU104
 298              		.loc 1 501 23 is_stmt 0 view .LVU105
ARM GAS  C:\Temp\cc5NKWQB.s 			page 15


 299 014e 4BF67643 		movw	r3, #48246
 300 0152 0993     		str	r3, [sp, #36]
 502:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_15|GPIO_PIN_4
 503:Core/Src/main.c ****                           |GPIO_PIN_5|GPIO_PIN_6;
 504:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 301              		.loc 1 504 3 is_stmt 1 view .LVU106
 302              		.loc 1 504 24 is_stmt 0 view .LVU107
 303 0154 0A95     		str	r5, [sp, #40]
 505:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 1 505 3 is_stmt 1 view .LVU108
 305              		.loc 1 505 24 is_stmt 0 view .LVU109
 306 0156 0B94     		str	r4, [sp, #44]
 506:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 307              		.loc 1 506 3 is_stmt 1 view .LVU110
 308 0158 09A9     		add	r1, sp, #36
 309 015a 3846     		mov	r0, r7
 310 015c FFF7FEFF 		bl	HAL_GPIO_Init
 311              	.LVL9:
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /*Configure GPIO pins : PG0 PG1 PG2 PG3
 509:Core/Src/main.c ****                            PG4 PG5 PG8 PG9
 510:Core/Src/main.c ****                            PG10 PG11 PG12 PG13
 511:Core/Src/main.c ****                            PG14 PG15 */
 512:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 312              		.loc 1 512 3 view .LVU111
 313              		.loc 1 512 23 is_stmt 0 view .LVU112
 314 0160 4FF63F73 		movw	r3, #65343
 315 0164 0993     		str	r3, [sp, #36]
 513:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9
 514:Core/Src/main.c ****                           |GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13
 515:Core/Src/main.c ****                           |GPIO_PIN_14|GPIO_PIN_15;
 516:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 316              		.loc 1 516 3 is_stmt 1 view .LVU113
 317              		.loc 1 516 24 is_stmt 0 view .LVU114
 318 0166 0A95     		str	r5, [sp, #40]
 517:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 319              		.loc 1 517 3 is_stmt 1 view .LVU115
 320              		.loc 1 517 24 is_stmt 0 view .LVU116
 321 0168 0B94     		str	r4, [sp, #44]
 518:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 322              		.loc 1 518 3 is_stmt 1 view .LVU117
 323 016a 09A9     		add	r1, sp, #36
 324 016c 3046     		mov	r0, r6
 325 016e FFF7FEFF 		bl	HAL_GPIO_Init
 326              	.LVL10:
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /*Configure GPIO pins : PD10 PD11 PD12 PD13
 521:Core/Src/main.c ****                            PD14 PD15 PD0 PD1
 522:Core/Src/main.c ****                            PD2 PD3 PD4 PD5
 523:Core/Src/main.c ****                            PD6 PD7 */
 524:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13
 327              		.loc 1 524 3 view .LVU118
 328              		.loc 1 524 23 is_stmt 0 view .LVU119
 329 0172 4FF6FF43 		movw	r3, #64767
 330 0176 0993     		str	r3, [sp, #36]
 525:Core/Src/main.c ****                           |GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1
 526:Core/Src/main.c ****                           |GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
ARM GAS  C:\Temp\cc5NKWQB.s 			page 16


 527:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7;
 528:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 331              		.loc 1 528 3 is_stmt 1 view .LVU120
 332              		.loc 1 528 24 is_stmt 0 view .LVU121
 333 0178 0A95     		str	r5, [sp, #40]
 529:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 334              		.loc 1 529 3 is_stmt 1 view .LVU122
 335              		.loc 1 529 24 is_stmt 0 view .LVU123
 336 017a 0B94     		str	r4, [sp, #44]
 530:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 337              		.loc 1 530 3 is_stmt 1 view .LVU124
 338 017c 09A9     		add	r1, sp, #36
 339 017e 1248     		ldr	r0, .L3+24
 340 0180 FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL11:
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 533:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 342              		.loc 1 533 3 view .LVU125
 343              		.loc 1 533 23 is_stmt 0 view .LVU126
 344 0184 4023     		movs	r3, #64
 345 0186 0993     		str	r3, [sp, #36]
 534:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 346              		.loc 1 534 3 is_stmt 1 view .LVU127
 347              		.loc 1 534 24 is_stmt 0 view .LVU128
 348 0188 CDF82880 		str	r8, [sp, #40]
 535:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 349              		.loc 1 535 3 is_stmt 1 view .LVU129
 350              		.loc 1 535 24 is_stmt 0 view .LVU130
 351 018c 0B94     		str	r4, [sp, #44]
 536:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 352              		.loc 1 536 3 is_stmt 1 view .LVU131
 353              		.loc 1 536 25 is_stmt 0 view .LVU132
 354 018e 0C94     		str	r4, [sp, #48]
 537:Core/Src/main.c ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 355              		.loc 1 537 3 is_stmt 1 view .LVU133
 356 0190 09A9     		add	r1, sp, #36
 357 0192 3046     		mov	r0, r6
 358 0194 FFF7FEFF 		bl	HAL_GPIO_Init
 359              	.LVL12:
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 540:Core/Src/main.c ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 360              		.loc 1 540 3 view .LVU134
 361              		.loc 1 540 23 is_stmt 0 view .LVU135
 362 0198 8023     		movs	r3, #128
 363 019a 0993     		str	r3, [sp, #36]
 541:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 364              		.loc 1 541 3 is_stmt 1 view .LVU136
 365              		.loc 1 541 24 is_stmt 0 view .LVU137
 366 019c 0A94     		str	r4, [sp, #40]
 542:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 367              		.loc 1 542 3 is_stmt 1 view .LVU138
 368              		.loc 1 542 24 is_stmt 0 view .LVU139
 369 019e 0B94     		str	r4, [sp, #44]
 543:Core/Src/main.c ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 370              		.loc 1 543 3 is_stmt 1 view .LVU140
ARM GAS  C:\Temp\cc5NKWQB.s 			page 17


 371 01a0 09A9     		add	r1, sp, #36
 372 01a2 3046     		mov	r0, r6
 373 01a4 FFF7FEFF 		bl	HAL_GPIO_Init
 374              	.LVL13:
 544:Core/Src/main.c **** 
 545:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 546:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 547:Core/Src/main.c **** }
 375              		.loc 1 547 1 is_stmt 0 view .LVU141
 376 01a8 0EB0     		add	sp, sp, #56
 377              		.cfi_def_cfa_offset 24
 378              		@ sp needed
 379 01aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 380              	.L4:
 381 01ae 00BF     		.align	2
 382              	.L3:
 383 01b0 00100240 		.word	1073876992
 384 01b4 00040048 		.word	1207960576
 385 01b8 00180048 		.word	1207965696
 386 01bc 00100048 		.word	1207963648
 387 01c0 001C0048 		.word	1207966720
 388 01c4 00140048 		.word	1207964672
 389 01c8 000C0048 		.word	1207962624
 390 01cc 00080048 		.word	1207961600
 391              		.cfi_endproc
 392              	.LFE139:
 394              		.section	.text.MX_DMA_Init,"ax",%progbits
 395              		.align	1
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	MX_DMA_Init:
 401              	.LFB138:
 394:Core/Src/main.c **** 
 402              		.loc 1 394 1 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 8
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406 0000 00B5     		push	{lr}
 407              		.cfi_def_cfa_offset 4
 408              		.cfi_offset 14, -4
 409 0002 83B0     		sub	sp, sp, #12
 410              		.cfi_def_cfa_offset 16
 397:Core/Src/main.c **** 
 411              		.loc 1 397 3 view .LVU143
 412              	.LBB12:
 397:Core/Src/main.c **** 
 413              		.loc 1 397 3 view .LVU144
 397:Core/Src/main.c **** 
 414              		.loc 1 397 3 view .LVU145
 415 0004 0A4B     		ldr	r3, .L7
 416 0006 5A69     		ldr	r2, [r3, #20]
 417 0008 42F00102 		orr	r2, r2, #1
 418 000c 5A61     		str	r2, [r3, #20]
 397:Core/Src/main.c **** 
 419              		.loc 1 397 3 view .LVU146
 420 000e 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Temp\cc5NKWQB.s 			page 18


 421 0010 03F00103 		and	r3, r3, #1
 422 0014 0193     		str	r3, [sp, #4]
 397:Core/Src/main.c **** 
 423              		.loc 1 397 3 view .LVU147
 424 0016 019B     		ldr	r3, [sp, #4]
 425              	.LBE12:
 397:Core/Src/main.c **** 
 426              		.loc 1 397 3 view .LVU148
 401:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 427              		.loc 1 401 3 view .LVU149
 428 0018 0022     		movs	r2, #0
 429 001a 1146     		mov	r1, r2
 430 001c 0D20     		movs	r0, #13
 431 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 432              	.LVL14:
 402:Core/Src/main.c **** 
 433              		.loc 1 402 3 view .LVU150
 434 0022 0D20     		movs	r0, #13
 435 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 436              	.LVL15:
 404:Core/Src/main.c **** 
 437              		.loc 1 404 1 is_stmt 0 view .LVU151
 438 0028 03B0     		add	sp, sp, #12
 439              		.cfi_def_cfa_offset 4
 440              		@ sp needed
 441 002a 5DF804FB 		ldr	pc, [sp], #4
 442              	.L8:
 443 002e 00BF     		.align	2
 444              	.L7:
 445 0030 00100240 		.word	1073876992
 446              		.cfi_endproc
 447              	.LFE138:
 449              		.section	.text.configureTimer,"ax",%progbits
 450              		.align	1
 451              		.global	configureTimer
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 456              	configureTimer:
 457              	.LVL16:
 458              	.LFB130:
  84:Core/Src/main.c ****     // Assuming the clock frequency driving the timer is 100 MHz
 459              		.loc 1 84 46 is_stmt 1 view -0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
  86:Core/Src/main.c **** 
 464              		.loc 1 86 5 view .LVU153
  89:Core/Src/main.c **** 
 465              		.loc 1 89 5 view .LVU154
  89:Core/Src/main.c **** 
 466              		.loc 1 89 11 is_stmt 0 view .LVU155
 467 0000 DFED137A 		vldr.32	s15, .L14
 468 0004 C7EE806A 		vdiv.f32	s13, s15, s0
 469              	.LVL17:
  92:Core/Src/main.c ****     if (prescaler > 65535) {
ARM GAS  C:\Temp\cc5NKWQB.s 			page 19


 470              		.loc 1 92 5 is_stmt 1 view .LVU156
  92:Core/Src/main.c ****     if (prescaler > 65535) {
 471              		.loc 1 92 50 is_stmt 0 view .LVU157
 472 0008 DFED127A 		vldr.32	s15, .L14+4
 473 000c 66EEA77A 		vmul.f32	s15, s13, s15
  92:Core/Src/main.c ****     if (prescaler > 65535) {
 474              		.loc 1 92 14 view .LVU158
 475 0010 FCEEE77A 		vcvt.u32.f32	s15, s15
 476 0014 17EE903A 		vmov	r3, s15	@ int
 477              	.LVL18:
  93:Core/Src/main.c ****         prescaler = 65535; // Cap PSC if it exceeds 16-bit value
 478              		.loc 1 93 5 is_stmt 1 view .LVU159
  93:Core/Src/main.c ****         prescaler = 65535; // Cap PSC if it exceeds 16-bit value
 479              		.loc 1 93 8 is_stmt 0 view .LVU160
 480 0018 B3F5803F 		cmp	r3, #65536
 481 001c 01D3     		bcc	.L10
  94:Core/Src/main.c ****     }
 482              		.loc 1 94 19 view .LVU161
 483 001e 4FF6FF73 		movw	r3, #65535
 484              	.LVL19:
 485              	.L10:
  98:Core/Src/main.c ****     if (arr > 65535) {
 486              		.loc 1 98 5 is_stmt 1 view .LVU162
  98:Core/Src/main.c ****     if (arr > 65535) {
 487              		.loc 1 98 57 is_stmt 0 view .LVU163
 488 0022 5A1C     		adds	r2, r3, #1
 489 0024 07EE102A 		vmov	s14, r2	@ int
  98:Core/Src/main.c ****     if (arr > 65535) {
 490              		.loc 1 98 44 view .LVU164
 491 0028 B8EE477A 		vcvt.f32.u32	s14, s14
 492 002c C6EE877A 		vdiv.f32	s15, s13, s14
  98:Core/Src/main.c ****     if (arr > 65535) {
 493              		.loc 1 98 14 view .LVU165
 494 0030 FCEEE77A 		vcvt.u32.f32	s15, s15
 495 0034 17EE902A 		vmov	r2, s15	@ int
 496              	.LVL20:
  99:Core/Src/main.c ****         arr = 65535; // Cap ARR if it exceeds 16-bit value
 497              		.loc 1 99 5 is_stmt 1 view .LVU166
  99:Core/Src/main.c ****         arr = 65535; // Cap ARR if it exceeds 16-bit value
 498              		.loc 1 99 8 is_stmt 0 view .LVU167
 499 0038 B2F5803F 		cmp	r2, #65536
 500 003c 01D3     		bcc	.L11
 100:Core/Src/main.c ****     }
 501              		.loc 1 100 13 view .LVU168
 502 003e 4FF6FF72 		movw	r2, #65535
 503              	.LVL21:
 504              	.L11:
 104:Core/Src/main.c ****     TIM2->ARR = arr;         // Set the auto-reload register
 505              		.loc 1 104 5 is_stmt 1 view .LVU169
 104:Core/Src/main.c ****     TIM2->ARR = arr;         // Set the auto-reload register
 506              		.loc 1 104 15 is_stmt 0 view .LVU170
 507 0042 4FF08041 		mov	r1, #1073741824
 508 0046 8B62     		str	r3, [r1, #40]
 105:Core/Src/main.c **** 
 509              		.loc 1 105 5 is_stmt 1 view .LVU171
 105:Core/Src/main.c **** 
 510              		.loc 1 105 15 is_stmt 0 view .LVU172
ARM GAS  C:\Temp\cc5NKWQB.s 			page 20


 511 0048 CA62     		str	r2, [r1, #44]
 108:Core/Src/main.c **** }
 512              		.loc 1 108 5 is_stmt 1 view .LVU173
 108:Core/Src/main.c **** }
 513              		.loc 1 108 15 is_stmt 0 view .LVU174
 514 004a 0123     		movs	r3, #1
 515              	.LVL22:
 108:Core/Src/main.c **** }
 516              		.loc 1 108 15 view .LVU175
 517 004c 4B61     		str	r3, [r1, #20]
 109:Core/Src/main.c **** 
 518              		.loc 1 109 1 view .LVU176
 519 004e 7047     		bx	lr
 520              	.L15:
 521              		.align	2
 522              	.L14:
 523 0050 20BCBE4C 		.word	1287568416
 524 0054 00008037 		.word	931135488
 525              		.cfi_endproc
 526              	.LFE130:
 528              		.section	.text.initialCalibration,"ax",%progbits
 529              		.align	1
 530              		.global	initialCalibration
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 535              	initialCalibration:
 536              	.LFB131:
 111:Core/Src/main.c ****   HAL_UART_Receive(&huart3,(uint8_t *) &bigBuffer, (size_t) (numberOfSimulinkBytes+3+3),HAL_MAX_DEL
 537              		.loc 1 111 26 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541 0000 10B5     		push	{r4, lr}
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 4, -8
 544              		.cfi_offset 14, -4
 112:Core/Src/main.c ****   if (bigBuffer[0] == expectedHeader[0] &&
 545              		.loc 1 112 3 view .LVU178
 546 0002 194C     		ldr	r4, .L20
 547 0004 4FF0FF33 		mov	r3, #-1
 548 0008 0E22     		movs	r2, #14
 549 000a 2146     		mov	r1, r4
 550 000c 1748     		ldr	r0, .L20+4
 551 000e FFF7FEFF 		bl	HAL_UART_Receive
 552              	.LVL23:
 113:Core/Src/main.c ****       bigBuffer[1] == expectedHeader[1] &&
 553              		.loc 1 113 3 view .LVU179
 113:Core/Src/main.c ****       bigBuffer[1] == expectedHeader[1] &&
 554              		.loc 1 113 16 is_stmt 0 view .LVU180
 555 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 113:Core/Src/main.c ****       bigBuffer[1] == expectedHeader[1] &&
 556              		.loc 1 113 6 view .LVU181
 557 0014 4A2B     		cmp	r3, #74
 558 0016 00D0     		beq	.L19
 559              	.L16:
 127:Core/Src/main.c **** 
ARM GAS  C:\Temp\cc5NKWQB.s 			page 21


 560              		.loc 1 127 1 view .LVU182
 561 0018 10BD     		pop	{r4, pc}
 562              	.L19:
 114:Core/Src/main.c ****       bigBuffer[2] == expectedHeader[2] &&
 563              		.loc 1 114 16 discriminator 1 view .LVU183
 564 001a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 113:Core/Src/main.c ****       bigBuffer[1] == expectedHeader[1] &&
 565              		.loc 1 113 41 discriminator 1 view .LVU184
 566 001c 5F2B     		cmp	r3, #95
 567 001e FBD1     		bne	.L16
 115:Core/Src/main.c ****       bigBuffer[numberOfSimulinkBytes+3+0] == expectedTerminator[0] &&
 568              		.loc 1 115 16 view .LVU185
 569 0020 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 114:Core/Src/main.c ****       bigBuffer[2] == expectedHeader[2] &&
 570              		.loc 1 114 41 view .LVU186
 571 0022 412B     		cmp	r3, #65
 572 0024 F8D1     		bne	.L16
 116:Core/Src/main.c ****       bigBuffer[numberOfSimulinkBytes+3+1] == expectedTerminator[1] &&
 573              		.loc 1 116 16 view .LVU187
 574 0026 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 115:Core/Src/main.c ****       bigBuffer[numberOfSimulinkBytes+3+0] == expectedTerminator[0] &&
 575              		.loc 1 115 41 view .LVU188
 576 0028 412B     		cmp	r3, #65
 577 002a F5D1     		bne	.L16
 117:Core/Src/main.c ****       bigBuffer[numberOfSimulinkBytes+3+2] == expectedTerminator[2]){
 578              		.loc 1 117 16 view .LVU189
 579 002c 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 116:Core/Src/main.c ****       bigBuffer[numberOfSimulinkBytes+3+1] == expectedTerminator[1] &&
 580              		.loc 1 116 69 view .LVU190
 581 002e 5F2B     		cmp	r3, #95
 582 0030 F2D1     		bne	.L16
 118:Core/Src/main.c ****         if (calibrated == 0){
 583              		.loc 1 118 16 view .LVU191
 584 0032 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 117:Core/Src/main.c ****       bigBuffer[numberOfSimulinkBytes+3+2] == expectedTerminator[2]){
 585              		.loc 1 117 69 view .LVU192
 586 0034 4A2B     		cmp	r3, #74
 587 0036 EFD1     		bne	.L16
 119:Core/Src/main.c ****           receivedFromSimulink(&bigBuffer);
 588              		.loc 1 119 9 is_stmt 1 view .LVU193
 119:Core/Src/main.c ****           receivedFromSimulink(&bigBuffer);
 589              		.loc 1 119 24 is_stmt 0 view .LVU194
 590 0038 0D4B     		ldr	r3, .L20+8
 591 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 119:Core/Src/main.c ****           receivedFromSimulink(&bigBuffer);
 592              		.loc 1 119 12 view .LVU195
 593 003c 002B     		cmp	r3, #0
 594 003e EBD1     		bne	.L16
 120:Core/Src/main.c ****           HAL_GPIO_WritePin(GREEN_LED_GPIO_Port,GREEN_LED_Pin,1);
 595              		.loc 1 120 11 is_stmt 1 view .LVU196
 596 0040 2046     		mov	r0, r4
 597 0042 FFF7FEFF 		bl	receivedFromSimulink
 598              	.LVL24:
 121:Core/Src/main.c ****           calibrated = 1;
 599              		.loc 1 121 11 view .LVU197
 600 0046 0122     		movs	r2, #1
 601 0048 1146     		mov	r1, r2
ARM GAS  C:\Temp\cc5NKWQB.s 			page 22


 602 004a 0A48     		ldr	r0, .L20+12
 603 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 604              	.LVL25:
 122:Core/Src/main.c ****           configureTimer(accel2_odr);
 605              		.loc 1 122 11 view .LVU198
 122:Core/Src/main.c ****           configureTimer(accel2_odr);
 606              		.loc 1 122 22 is_stmt 0 view .LVU199
 607 0050 074B     		ldr	r3, .L20+8
 608 0052 0122     		movs	r2, #1
 609 0054 1A70     		strb	r2, [r3]
 123:Core/Src/main.c ****           HAL_TIM_Base_Start_IT(&htim2);
 610              		.loc 1 123 11 is_stmt 1 view .LVU200
 611 0056 084B     		ldr	r3, .L20+16
 612 0058 93ED000A 		vldr.32	s0, [r3]
 613 005c FFF7FEFF 		bl	configureTimer
 614              	.LVL26:
 124:Core/Src/main.c ****         }
 615              		.loc 1 124 11 view .LVU201
 616 0060 0648     		ldr	r0, .L20+20
 617 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 618              	.LVL27:
 127:Core/Src/main.c **** 
 619              		.loc 1 127 1 is_stmt 0 view .LVU202
 620 0066 D7E7     		b	.L16
 621              	.L21:
 622              		.align	2
 623              	.L20:
 624 0068 00000000 		.word	bigBuffer
 625 006c 00000000 		.word	huart3
 626 0070 00000000 		.word	calibrated
 627 0074 00040048 		.word	1207960576
 628 0078 00000000 		.word	accel2_odr
 629 007c 00000000 		.word	htim2
 630              		.cfi_endproc
 631              	.LFE131:
 633              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 634              		.align	1
 635              		.global	HAL_TIM_PeriodElapsedCallback
 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 640              	HAL_TIM_PeriodElapsedCallback:
 641              	.LVL28:
 642              	.LFB140:
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 550:Core/Src/main.c **** 
 551:Core/Src/main.c **** /* USER CODE END 4 */
 552:Core/Src/main.c **** 
 553:Core/Src/main.c **** /**
 554:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 555:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 556:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 557:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 558:Core/Src/main.c ****   * @param  htim : TIM handle
 559:Core/Src/main.c ****   * @retval None
 560:Core/Src/main.c ****   */
ARM GAS  C:\Temp\cc5NKWQB.s 			page 23


 561:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 562:Core/Src/main.c **** {
 643              		.loc 1 562 1 is_stmt 1 view -0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		.loc 1 562 1 is_stmt 0 view .LVU204
 648 0000 08B5     		push	{r3, lr}
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 3, -8
 651              		.cfi_offset 14, -4
 563:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 566:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 652              		.loc 1 566 3 is_stmt 1 view .LVU205
 653              		.loc 1 566 11 is_stmt 0 view .LVU206
 654 0002 0268     		ldr	r2, [r0]
 655              		.loc 1 566 6 view .LVU207
 656 0004 034B     		ldr	r3, .L26
 657 0006 9A42     		cmp	r2, r3
 658 0008 00D0     		beq	.L25
 659              	.LVL29:
 660              	.L22:
 567:Core/Src/main.c ****     HAL_IncTick();
 568:Core/Src/main.c ****   }
 569:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 570:Core/Src/main.c **** 
 571:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 572:Core/Src/main.c **** }
 661              		.loc 1 572 1 view .LVU208
 662 000a 08BD     		pop	{r3, pc}
 663              	.LVL30:
 664              	.L25:
 567:Core/Src/main.c ****     HAL_IncTick();
 665              		.loc 1 567 5 is_stmt 1 view .LVU209
 666 000c FFF7FEFF 		bl	HAL_IncTick
 667              	.LVL31:
 668              		.loc 1 572 1 is_stmt 0 view .LVU210
 669 0010 FBE7     		b	.L22
 670              	.L27:
 671 0012 00BF     		.align	2
 672              	.L26:
 673 0014 002C0140 		.word	1073818624
 674              		.cfi_endproc
 675              	.LFE140:
 677              		.section	.text.Error_Handler,"ax",%progbits
 678              		.align	1
 679              		.global	Error_Handler
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	Error_Handler:
 685              	.LFB141:
 573:Core/Src/main.c **** 
 574:Core/Src/main.c **** /**
 575:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  C:\Temp\cc5NKWQB.s 			page 24


 576:Core/Src/main.c ****   * @retval None
 577:Core/Src/main.c ****   */
 578:Core/Src/main.c **** void Error_Handler(void)
 579:Core/Src/main.c **** {
 686              		.loc 1 579 1 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ Volatile: function does not return.
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 580:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 581:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 582:Core/Src/main.c ****   __disable_irq();
 692              		.loc 1 582 3 view .LVU212
 693              	.LBB13:
 694              	.LBI13:
 695              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  C:\Temp\cc5NKWQB.s 			page 25


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Temp\cc5NKWQB.s 			page 26


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 696              		.loc 2 140 27 view .LVU213
 697              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 698              		.loc 2 142 3 view .LVU214
 699              		.syntax unified
 700              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 701 0000 72B6     		cpsid i
 702              	@ 0 "" 2
 703              		.thumb
 704              		.syntax unified
 705              	.L29:
 706              	.LBE14:
 707              	.LBE13:
ARM GAS  C:\Temp\cc5NKWQB.s 			page 27


 583:Core/Src/main.c ****   while (1)
 708              		.loc 1 583 3 discriminator 1 view .LVU215
 584:Core/Src/main.c ****   {
 585:Core/Src/main.c ****   }
 709              		.loc 1 585 3 discriminator 1 view .LVU216
 583:Core/Src/main.c ****   while (1)
 710              		.loc 1 583 9 discriminator 1 view .LVU217
 711 0002 FEE7     		b	.L29
 712              		.cfi_endproc
 713              	.LFE141:
 715              		.section	.text.MX_RTC_Init,"ax",%progbits
 716              		.align	1
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 721              	MX_RTC_Init:
 722              	.LFB134:
 249:Core/Src/main.c **** 
 723              		.loc 1 249 1 view -0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727 0000 08B5     		push	{r3, lr}
 728              		.cfi_def_cfa_offset 8
 729              		.cfi_offset 3, -8
 730              		.cfi_offset 14, -4
 261:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 731              		.loc 1 261 3 view .LVU219
 261:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 732              		.loc 1 261 17 is_stmt 0 view .LVU220
 733 0002 0948     		ldr	r0, .L34
 734 0004 094B     		ldr	r3, .L34+4
 735 0006 0360     		str	r3, [r0]
 262:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 736              		.loc 1 262 3 is_stmt 1 view .LVU221
 262:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 737              		.loc 1 262 24 is_stmt 0 view .LVU222
 738 0008 0023     		movs	r3, #0
 739 000a 4360     		str	r3, [r0, #4]
 263:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 740              		.loc 1 263 3 is_stmt 1 view .LVU223
 263:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 741              		.loc 1 263 26 is_stmt 0 view .LVU224
 742 000c 7F22     		movs	r2, #127
 743 000e 8260     		str	r2, [r0, #8]
 264:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 744              		.loc 1 264 3 is_stmt 1 view .LVU225
 264:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 745              		.loc 1 264 25 is_stmt 0 view .LVU226
 746 0010 FF22     		movs	r2, #255
 747 0012 C260     		str	r2, [r0, #12]
 265:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 748              		.loc 1 265 3 is_stmt 1 view .LVU227
 265:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 749              		.loc 1 265 20 is_stmt 0 view .LVU228
 750 0014 0361     		str	r3, [r0, #16]
 266:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
ARM GAS  C:\Temp\cc5NKWQB.s 			page 28


 751              		.loc 1 266 3 is_stmt 1 view .LVU229
 266:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 752              		.loc 1 266 28 is_stmt 0 view .LVU230
 753 0016 4361     		str	r3, [r0, #20]
 267:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 754              		.loc 1 267 3 is_stmt 1 view .LVU231
 267:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 755              		.loc 1 267 24 is_stmt 0 view .LVU232
 756 0018 8361     		str	r3, [r0, #24]
 268:Core/Src/main.c ****   {
 757              		.loc 1 268 3 is_stmt 1 view .LVU233
 268:Core/Src/main.c ****   {
 758              		.loc 1 268 7 is_stmt 0 view .LVU234
 759 001a FFF7FEFF 		bl	HAL_RTC_Init
 760              	.LVL32:
 268:Core/Src/main.c ****   {
 761              		.loc 1 268 6 view .LVU235
 762 001e 00B9     		cbnz	r0, .L33
 276:Core/Src/main.c **** 
 763              		.loc 1 276 1 view .LVU236
 764 0020 08BD     		pop	{r3, pc}
 765              	.L33:
 270:Core/Src/main.c ****   }
 766              		.loc 1 270 5 is_stmt 1 view .LVU237
 767 0022 FFF7FEFF 		bl	Error_Handler
 768              	.LVL33:
 769              	.L35:
 770 0026 00BF     		.align	2
 771              	.L34:
 772 0028 00000000 		.word	hrtc
 773 002c 00280040 		.word	1073752064
 774              		.cfi_endproc
 775              	.LFE134:
 777              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 778              		.align	1
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 783              	MX_USART3_UART_Init:
 784              	.LFB136:
 329:Core/Src/main.c **** 
 785              		.loc 1 329 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789 0000 08B5     		push	{r3, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 3, -8
 792              		.cfi_offset 14, -4
 338:Core/Src/main.c ****   huart3.Init.BaudRate = 1843200;
 793              		.loc 1 338 3 view .LVU239
 338:Core/Src/main.c ****   huart3.Init.BaudRate = 1843200;
 794              		.loc 1 338 19 is_stmt 0 view .LVU240
 795 0002 0E48     		ldr	r0, .L40
 796 0004 0E4B     		ldr	r3, .L40+4
 797 0006 0360     		str	r3, [r0]
 339:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_9B;
ARM GAS  C:\Temp\cc5NKWQB.s 			page 29


 798              		.loc 1 339 3 is_stmt 1 view .LVU241
 339:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_9B;
 799              		.loc 1 339 24 is_stmt 0 view .LVU242
 800 0008 4FF4E113 		mov	r3, #1843200
 801 000c 4360     		str	r3, [r0, #4]
 340:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_2;
 802              		.loc 1 340 3 is_stmt 1 view .LVU243
 340:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_2;
 803              		.loc 1 340 26 is_stmt 0 view .LVU244
 804 000e 4FF48053 		mov	r3, #4096
 805 0012 8360     		str	r3, [r0, #8]
 341:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_EVEN;
 806              		.loc 1 341 3 is_stmt 1 view .LVU245
 341:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_EVEN;
 807              		.loc 1 341 24 is_stmt 0 view .LVU246
 808 0014 4FF40053 		mov	r3, #8192
 809 0018 C360     		str	r3, [r0, #12]
 342:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 810              		.loc 1 342 3 is_stmt 1 view .LVU247
 342:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 811              		.loc 1 342 22 is_stmt 0 view .LVU248
 812 001a 4FF48063 		mov	r3, #1024
 813 001e 0361     		str	r3, [r0, #16]
 343:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 814              		.loc 1 343 3 is_stmt 1 view .LVU249
 343:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 815              		.loc 1 343 20 is_stmt 0 view .LVU250
 816 0020 0C23     		movs	r3, #12
 817 0022 4361     		str	r3, [r0, #20]
 344:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 818              		.loc 1 344 3 is_stmt 1 view .LVU251
 344:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 819              		.loc 1 344 25 is_stmt 0 view .LVU252
 820 0024 0023     		movs	r3, #0
 821 0026 8361     		str	r3, [r0, #24]
 345:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 822              		.loc 1 345 3 is_stmt 1 view .LVU253
 345:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 823              		.loc 1 345 28 is_stmt 0 view .LVU254
 824 0028 C361     		str	r3, [r0, #28]
 346:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 825              		.loc 1 346 3 is_stmt 1 view .LVU255
 346:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 826              		.loc 1 346 30 is_stmt 0 view .LVU256
 827 002a 0362     		str	r3, [r0, #32]
 347:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 828              		.loc 1 347 3 is_stmt 1 view .LVU257
 347:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 829              		.loc 1 347 38 is_stmt 0 view .LVU258
 830 002c 4362     		str	r3, [r0, #36]
 348:Core/Src/main.c ****   {
 831              		.loc 1 348 3 is_stmt 1 view .LVU259
 348:Core/Src/main.c ****   {
 832              		.loc 1 348 7 is_stmt 0 view .LVU260
 833 002e FFF7FEFF 		bl	HAL_UART_Init
 834              	.LVL34:
 348:Core/Src/main.c ****   {
ARM GAS  C:\Temp\cc5NKWQB.s 			page 30


 835              		.loc 1 348 6 view .LVU261
 836 0032 00B9     		cbnz	r0, .L39
 356:Core/Src/main.c **** 
 837              		.loc 1 356 1 view .LVU262
 838 0034 08BD     		pop	{r3, pc}
 839              	.L39:
 350:Core/Src/main.c ****   }
 840              		.loc 1 350 5 is_stmt 1 view .LVU263
 841 0036 FFF7FEFF 		bl	Error_Handler
 842              	.LVL35:
 843              	.L41:
 844 003a 00BF     		.align	2
 845              	.L40:
 846 003c 00000000 		.word	huart3
 847 0040 00480040 		.word	1073760256
 848              		.cfi_endproc
 849              	.LFE136:
 851              		.section	.text.MX_USB_PCD_Init,"ax",%progbits
 852              		.align	1
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
 857              	MX_USB_PCD_Init:
 858              	.LFB137:
 364:Core/Src/main.c **** 
 859              		.loc 1 364 1 view -0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863 0000 08B5     		push	{r3, lr}
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 3, -8
 866              		.cfi_offset 14, -4
 373:Core/Src/main.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 867              		.loc 1 373 3 view .LVU265
 373:Core/Src/main.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 868              		.loc 1 373 24 is_stmt 0 view .LVU266
 869 0002 0948     		ldr	r0, .L46
 870 0004 094B     		ldr	r3, .L46+4
 871 0006 0360     		str	r3, [r0]
 374:Core/Src/main.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 872              		.loc 1 374 3 is_stmt 1 view .LVU267
 374:Core/Src/main.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 873              		.loc 1 374 34 is_stmt 0 view .LVU268
 874 0008 0823     		movs	r3, #8
 875 000a 0371     		strb	r3, [r0, #4]
 375:Core/Src/main.c ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 876              		.loc 1 375 3 is_stmt 1 view .LVU269
 375:Core/Src/main.c ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 877              		.loc 1 375 26 is_stmt 0 view .LVU270
 878 000c 0223     		movs	r3, #2
 879 000e 4371     		strb	r3, [r0, #5]
 376:Core/Src/main.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 880              		.loc 1 376 3 is_stmt 1 view .LVU271
 376:Core/Src/main.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 881              		.loc 1 376 31 is_stmt 0 view .LVU272
 882 0010 C371     		strb	r3, [r0, #7]
ARM GAS  C:\Temp\cc5NKWQB.s 			page 31


 377:Core/Src/main.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 883              		.loc 1 377 3 is_stmt 1 view .LVU273
 377:Core/Src/main.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 884              		.loc 1 377 37 is_stmt 0 view .LVU274
 885 0012 0023     		movs	r3, #0
 886 0014 4372     		strb	r3, [r0, #9]
 378:Core/Src/main.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 887              		.loc 1 378 3 is_stmt 1 view .LVU275
 378:Core/Src/main.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 888              		.loc 1 378 31 is_stmt 0 view .LVU276
 889 0016 8372     		strb	r3, [r0, #10]
 379:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 890              		.loc 1 379 3 is_stmt 1 view .LVU277
 379:Core/Src/main.c ****   if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 891              		.loc 1 379 44 is_stmt 0 view .LVU278
 892 0018 C372     		strb	r3, [r0, #11]
 380:Core/Src/main.c ****   {
 893              		.loc 1 380 3 is_stmt 1 view .LVU279
 380:Core/Src/main.c ****   {
 894              		.loc 1 380 7 is_stmt 0 view .LVU280
 895 001a FFF7FEFF 		bl	HAL_PCD_Init
 896              	.LVL36:
 380:Core/Src/main.c ****   {
 897              		.loc 1 380 6 view .LVU281
 898 001e 00B9     		cbnz	r0, .L45
 388:Core/Src/main.c **** 
 899              		.loc 1 388 1 view .LVU282
 900 0020 08BD     		pop	{r3, pc}
 901              	.L45:
 382:Core/Src/main.c ****   }
 902              		.loc 1 382 5 is_stmt 1 view .LVU283
 903 0022 FFF7FEFF 		bl	Error_Handler
 904              	.LVL37:
 905              	.L47:
 906 0026 00BF     		.align	2
 907              	.L46:
 908 0028 00000000 		.word	hpcd_USB_FS
 909 002c 005C0040 		.word	1073765376
 910              		.cfi_endproc
 911              	.LFE137:
 913              		.section	.text.MX_TIM2_Init,"ax",%progbits
 914              		.align	1
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 919              	MX_TIM2_Init:
 920              	.LFB135:
 284:Core/Src/main.c **** 
 921              		.loc 1 284 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 32
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925 0000 00B5     		push	{lr}
 926              		.cfi_def_cfa_offset 4
 927              		.cfi_offset 14, -4
 928 0002 89B0     		sub	sp, sp, #36
 929              		.cfi_def_cfa_offset 40
ARM GAS  C:\Temp\cc5NKWQB.s 			page 32


 290:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 930              		.loc 1 290 3 view .LVU285
 290:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 931              		.loc 1 290 26 is_stmt 0 view .LVU286
 932 0004 0023     		movs	r3, #0
 933 0006 0493     		str	r3, [sp, #16]
 934 0008 0593     		str	r3, [sp, #20]
 935 000a 0693     		str	r3, [sp, #24]
 936 000c 0793     		str	r3, [sp, #28]
 291:Core/Src/main.c **** 
 937              		.loc 1 291 3 is_stmt 1 view .LVU287
 291:Core/Src/main.c **** 
 938              		.loc 1 291 27 is_stmt 0 view .LVU288
 939 000e 0193     		str	r3, [sp, #4]
 940 0010 0293     		str	r3, [sp, #8]
 941 0012 0393     		str	r3, [sp, #12]
 296:Core/Src/main.c ****   htim2.Init.Prescaler = 100-1;
 942              		.loc 1 296 3 is_stmt 1 view .LVU289
 296:Core/Src/main.c ****   htim2.Init.Prescaler = 100-1;
 943              		.loc 1 296 18 is_stmt 0 view .LVU290
 944 0014 1348     		ldr	r0, .L56
 945 0016 4FF08042 		mov	r2, #1073741824
 946 001a 0260     		str	r2, [r0]
 297:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 947              		.loc 1 297 3 is_stmt 1 view .LVU291
 297:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 948              		.loc 1 297 24 is_stmt 0 view .LVU292
 949 001c 6322     		movs	r2, #99
 950 001e 4260     		str	r2, [r0, #4]
 298:Core/Src/main.c ****   htim2.Init.Period = 100-1;
 951              		.loc 1 298 3 is_stmt 1 view .LVU293
 298:Core/Src/main.c ****   htim2.Init.Period = 100-1;
 952              		.loc 1 298 26 is_stmt 0 view .LVU294
 953 0020 8360     		str	r3, [r0, #8]
 299:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 954              		.loc 1 299 3 is_stmt 1 view .LVU295
 299:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 955              		.loc 1 299 21 is_stmt 0 view .LVU296
 956 0022 C260     		str	r2, [r0, #12]
 300:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 957              		.loc 1 300 3 is_stmt 1 view .LVU297
 300:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 958              		.loc 1 300 28 is_stmt 0 view .LVU298
 959 0024 0361     		str	r3, [r0, #16]
 301:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 960              		.loc 1 301 3 is_stmt 1 view .LVU299
 301:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 961              		.loc 1 301 32 is_stmt 0 view .LVU300
 962 0026 8023     		movs	r3, #128
 963 0028 8361     		str	r3, [r0, #24]
 302:Core/Src/main.c ****   {
 964              		.loc 1 302 3 is_stmt 1 view .LVU301
 302:Core/Src/main.c ****   {
 965              		.loc 1 302 7 is_stmt 0 view .LVU302
 966 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 967              	.LVL38:
 302:Core/Src/main.c ****   {
ARM GAS  C:\Temp\cc5NKWQB.s 			page 33


 968              		.loc 1 302 6 view .LVU303
 969 002e 90B9     		cbnz	r0, .L53
 306:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 970              		.loc 1 306 3 is_stmt 1 view .LVU304
 306:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 971              		.loc 1 306 34 is_stmt 0 view .LVU305
 972 0030 4FF48053 		mov	r3, #4096
 973 0034 0493     		str	r3, [sp, #16]
 307:Core/Src/main.c ****   {
 974              		.loc 1 307 3 is_stmt 1 view .LVU306
 307:Core/Src/main.c ****   {
 975              		.loc 1 307 7 is_stmt 0 view .LVU307
 976 0036 04A9     		add	r1, sp, #16
 977 0038 0A48     		ldr	r0, .L56
 978 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 979              	.LVL39:
 307:Core/Src/main.c ****   {
 980              		.loc 1 307 6 view .LVU308
 981 003e 60B9     		cbnz	r0, .L54
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 982              		.loc 1 311 3 is_stmt 1 view .LVU309
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 983              		.loc 1 311 37 is_stmt 0 view .LVU310
 984 0040 0023     		movs	r3, #0
 985 0042 0193     		str	r3, [sp, #4]
 312:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 986              		.loc 1 312 3 is_stmt 1 view .LVU311
 312:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 987              		.loc 1 312 33 is_stmt 0 view .LVU312
 988 0044 0393     		str	r3, [sp, #12]
 313:Core/Src/main.c ****   {
 989              		.loc 1 313 3 is_stmt 1 view .LVU313
 313:Core/Src/main.c ****   {
 990              		.loc 1 313 7 is_stmt 0 view .LVU314
 991 0046 01A9     		add	r1, sp, #4
 992 0048 0648     		ldr	r0, .L56
 993 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 994              	.LVL40:
 313:Core/Src/main.c ****   {
 995              		.loc 1 313 6 view .LVU315
 996 004e 30B9     		cbnz	r0, .L55
 321:Core/Src/main.c **** 
 997              		.loc 1 321 1 view .LVU316
 998 0050 09B0     		add	sp, sp, #36
 999              		.cfi_remember_state
 1000              		.cfi_def_cfa_offset 4
 1001              		@ sp needed
 1002 0052 5DF804FB 		ldr	pc, [sp], #4
 1003              	.L53:
 1004              		.cfi_restore_state
 304:Core/Src/main.c ****   }
 1005              		.loc 1 304 5 is_stmt 1 view .LVU317
 1006 0056 FFF7FEFF 		bl	Error_Handler
 1007              	.LVL41:
 1008              	.L54:
 309:Core/Src/main.c ****   }
 1009              		.loc 1 309 5 view .LVU318
ARM GAS  C:\Temp\cc5NKWQB.s 			page 34


 1010 005a FFF7FEFF 		bl	Error_Handler
 1011              	.LVL42:
 1012              	.L55:
 315:Core/Src/main.c ****   }
 1013              		.loc 1 315 5 view .LVU319
 1014 005e FFF7FEFF 		bl	Error_Handler
 1015              	.LVL43:
 1016              	.L57:
 1017 0062 00BF     		.align	2
 1018              	.L56:
 1019 0064 00000000 		.word	htim2
 1020              		.cfi_endproc
 1021              	.LFE135:
 1023              		.section	.text.SystemClock_Config,"ax",%progbits
 1024              		.align	1
 1025              		.global	SystemClock_Config
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1030              	SystemClock_Config:
 1031              	.LFB133:
 193:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1032              		.loc 1 193 1 view -0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 152
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036 0000 00B5     		push	{lr}
 1037              		.cfi_def_cfa_offset 4
 1038              		.cfi_offset 14, -4
 1039 0002 A7B0     		sub	sp, sp, #156
 1040              		.cfi_def_cfa_offset 160
 194:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1041              		.loc 1 194 3 view .LVU321
 194:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1042              		.loc 1 194 22 is_stmt 0 view .LVU322
 1043 0004 2822     		movs	r2, #40
 1044 0006 0021     		movs	r1, #0
 1045 0008 1CA8     		add	r0, sp, #112
 1046 000a FFF7FEFF 		bl	memset
 1047              	.LVL44:
 195:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1048              		.loc 1 195 3 is_stmt 1 view .LVU323
 195:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1049              		.loc 1 195 22 is_stmt 0 view .LVU324
 1050 000e 0021     		movs	r1, #0
 1051 0010 1791     		str	r1, [sp, #92]
 1052 0012 1891     		str	r1, [sp, #96]
 1053 0014 1991     		str	r1, [sp, #100]
 1054 0016 1A91     		str	r1, [sp, #104]
 1055 0018 1B91     		str	r1, [sp, #108]
 196:Core/Src/main.c **** 
 1056              		.loc 1 196 3 is_stmt 1 view .LVU325
 196:Core/Src/main.c **** 
 1057              		.loc 1 196 28 is_stmt 0 view .LVU326
 1058 001a 5822     		movs	r2, #88
 1059 001c 01A8     		add	r0, sp, #4
 1060 001e FFF7FEFF 		bl	memset
ARM GAS  C:\Temp\cc5NKWQB.s 			page 35


 1061              	.LVL45:
 201:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSE;
 1062              		.loc 1 201 3 is_stmt 1 view .LVU327
 201:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSE;
 1063              		.loc 1 201 36 is_stmt 0 view .LVU328
 1064 0022 0B23     		movs	r3, #11
 1065 0024 1C93     		str	r3, [sp, #112]
 203:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1066              		.loc 1 203 3 is_stmt 1 view .LVU329
 203:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1067              		.loc 1 203 30 is_stmt 0 view .LVU330
 1068 0026 4FF4A023 		mov	r3, #327680
 1069 002a 1D93     		str	r3, [sp, #116]
 204:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1070              		.loc 1 204 3 is_stmt 1 view .LVU331
 204:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1071              		.loc 1 204 30 is_stmt 0 view .LVU332
 1072 002c 0123     		movs	r3, #1
 1073 002e 1F93     		str	r3, [sp, #124]
 205:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1074              		.loc 1 205 3 is_stmt 1 view .LVU333
 205:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 1075              		.loc 1 205 41 is_stmt 0 view .LVU334
 1076 0030 1022     		movs	r2, #16
 1077 0032 2092     		str	r2, [sp, #128]
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1078              		.loc 1 206 3 is_stmt 1 view .LVU335
 206:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1079              		.loc 1 206 30 is_stmt 0 view .LVU336
 1080 0034 2193     		str	r3, [sp, #132]
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1081              		.loc 1 207 3 is_stmt 1 view .LVU337
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1082              		.loc 1 207 34 is_stmt 0 view .LVU338
 1083 0036 0223     		movs	r3, #2
 1084 0038 2293     		str	r3, [sp, #136]
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1085              		.loc 1 208 3 is_stmt 1 view .LVU339
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1086              		.loc 1 208 35 is_stmt 0 view .LVU340
 1087 003a 4FF48033 		mov	r3, #65536
 1088 003e 2393     		str	r3, [sp, #140]
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1089              		.loc 1 209 3 is_stmt 1 view .LVU341
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1090              		.loc 1 209 32 is_stmt 0 view .LVU342
 1091 0040 4FF4E013 		mov	r3, #1835008
 1092 0044 2493     		str	r3, [sp, #144]
 210:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1093              		.loc 1 210 3 is_stmt 1 view .LVU343
 211:Core/Src/main.c ****   {
 1094              		.loc 1 211 3 view .LVU344
 211:Core/Src/main.c ****   {
 1095              		.loc 1 211 7 is_stmt 0 view .LVU345
 1096 0046 1CA8     		add	r0, sp, #112
 1097 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1098              	.LVL46:
ARM GAS  C:\Temp\cc5NKWQB.s 			page 36


 211:Core/Src/main.c ****   {
 1099              		.loc 1 211 6 view .LVU346
 1100 004c F0B9     		cbnz	r0, .L63
 218:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1101              		.loc 1 218 3 is_stmt 1 view .LVU347
 218:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1102              		.loc 1 218 31 is_stmt 0 view .LVU348
 1103 004e 0F23     		movs	r3, #15
 1104 0050 1793     		str	r3, [sp, #92]
 220:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1105              		.loc 1 220 3 is_stmt 1 view .LVU349
 220:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1106              		.loc 1 220 34 is_stmt 0 view .LVU350
 1107 0052 0221     		movs	r1, #2
 1108 0054 1891     		str	r1, [sp, #96]
 221:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1109              		.loc 1 221 3 is_stmt 1 view .LVU351
 221:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1110              		.loc 1 221 35 is_stmt 0 view .LVU352
 1111 0056 0023     		movs	r3, #0
 1112 0058 1993     		str	r3, [sp, #100]
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1113              		.loc 1 222 3 is_stmt 1 view .LVU353
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1114              		.loc 1 222 36 is_stmt 0 view .LVU354
 1115 005a 4FF48062 		mov	r2, #1024
 1116 005e 1A92     		str	r2, [sp, #104]
 223:Core/Src/main.c **** 
 1117              		.loc 1 223 3 is_stmt 1 view .LVU355
 223:Core/Src/main.c **** 
 1118              		.loc 1 223 36 is_stmt 0 view .LVU356
 1119 0060 1B93     		str	r3, [sp, #108]
 225:Core/Src/main.c ****   {
 1120              		.loc 1 225 3 is_stmt 1 view .LVU357
 225:Core/Src/main.c ****   {
 1121              		.loc 1 225 7 is_stmt 0 view .LVU358
 1122 0062 17A8     		add	r0, sp, #92
 1123 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1124              	.LVL47:
 225:Core/Src/main.c ****   {
 1125              		.loc 1 225 6 view .LVU359
 1126 0068 90B9     		cbnz	r0, .L64
 229:Core/Src/main.c ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_RTC
 1127              		.loc 1 229 3 is_stmt 1 view .LVU360
 229:Core/Src/main.c ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_RTC
 1128              		.loc 1 229 38 is_stmt 0 view .LVU361
 1129 006a 0B4B     		ldr	r3, .L66
 1130 006c 0193     		str	r3, [sp, #4]
 232:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1131              		.loc 1 232 3 is_stmt 1 view .LVU362
 232:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1132              		.loc 1 232 38 is_stmt 0 view .LVU363
 1133 006e 0023     		movs	r3, #0
 1134 0070 0593     		str	r3, [sp, #20]
 233:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1135              		.loc 1 233 3 is_stmt 1 view .LVU364
 233:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
ARM GAS  C:\Temp\cc5NKWQB.s 			page 37


 1136              		.loc 1 233 36 is_stmt 0 view .LVU365
 1137 0072 0893     		str	r3, [sp, #32]
 234:Core/Src/main.c ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1138              		.loc 1 234 3 is_stmt 1 view .LVU366
 234:Core/Src/main.c ****   PeriphClkInit.USBClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1139              		.loc 1 234 35 is_stmt 0 view .LVU367
 1140 0074 4FF40072 		mov	r2, #512
 1141 0078 0292     		str	r2, [sp, #8]
 235:Core/Src/main.c ****   PeriphClkInit.Tim2ClockSelection = RCC_TIM2CLK_HCLK;
 1142              		.loc 1 235 3 is_stmt 1 view .LVU368
 235:Core/Src/main.c ****   PeriphClkInit.Tim2ClockSelection = RCC_TIM2CLK_HCLK;
 1143              		.loc 1 235 35 is_stmt 0 view .LVU369
 1144 007a 1693     		str	r3, [sp, #88]
 236:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1145              		.loc 1 236 3 is_stmt 1 view .LVU370
 236:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1146              		.loc 1 236 36 is_stmt 0 view .LVU371
 1147 007c 0F93     		str	r3, [sp, #60]
 237:Core/Src/main.c ****   {
 1148              		.loc 1 237 3 is_stmt 1 view .LVU372
 237:Core/Src/main.c ****   {
 1149              		.loc 1 237 7 is_stmt 0 view .LVU373
 1150 007e 01A8     		add	r0, sp, #4
 1151 0080 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1152              	.LVL48:
 237:Core/Src/main.c ****   {
 1153              		.loc 1 237 6 view .LVU374
 1154 0084 30B9     		cbnz	r0, .L65
 241:Core/Src/main.c **** 
 1155              		.loc 1 241 1 view .LVU375
 1156 0086 27B0     		add	sp, sp, #156
 1157              		.cfi_remember_state
 1158              		.cfi_def_cfa_offset 4
 1159              		@ sp needed
 1160 0088 5DF804FB 		ldr	pc, [sp], #4
 1161              	.L63:
 1162              		.cfi_restore_state
 213:Core/Src/main.c ****   }
 1163              		.loc 1 213 5 is_stmt 1 view .LVU376
 1164 008c FFF7FEFF 		bl	Error_Handler
 1165              	.LVL49:
 1166              	.L64:
 227:Core/Src/main.c ****   }
 1167              		.loc 1 227 5 view .LVU377
 1168 0090 FFF7FEFF 		bl	Error_Handler
 1169              	.LVL50:
 1170              	.L65:
 239:Core/Src/main.c ****   }
 1171              		.loc 1 239 5 view .LVU378
 1172 0094 FFF7FEFF 		bl	Error_Handler
 1173              	.LVL51:
 1174              	.L67:
 1175              		.align	2
 1176              	.L66:
 1177 0098 24001300 		.word	1245220
 1178              		.cfi_endproc
 1179              	.LFE133:
ARM GAS  C:\Temp\cc5NKWQB.s 			page 38


 1181              		.section	.text.main,"ax",%progbits
 1182              		.align	1
 1183              		.global	main
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1188              	main:
 1189              	.LFB132:
 136:Core/Src/main.c **** 
 1190              		.loc 1 136 1 view -0
 1191              		.cfi_startproc
 1192              		@ Volatile: function does not return.
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195 0000 08B5     		push	{r3, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 3, -8
 1198              		.cfi_offset 14, -4
 145:Core/Src/main.c **** 
 1199              		.loc 1 145 3 view .LVU380
 1200 0002 FFF7FEFF 		bl	HAL_Init
 1201              	.LVL52:
 152:Core/Src/main.c **** 
 1202              		.loc 1 152 3 view .LVU381
 1203 0006 FFF7FEFF 		bl	SystemClock_Config
 1204              	.LVL53:
 155:Core/Src/main.c ****   /* USER CODE END SysInit */
 1205              		.loc 1 155 3 view .LVU382
 1206 000a 0022     		movs	r2, #0
 1207 000c 0121     		movs	r1, #1
 1208 000e 0D48     		ldr	r0, .L73
 1209 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1210              	.LVL54:
 159:Core/Src/main.c ****   MX_DMA_Init();
 1211              		.loc 1 159 3 view .LVU383
 1212 0014 FFF7FEFF 		bl	MX_GPIO_Init
 1213              	.LVL55:
 160:Core/Src/main.c ****   MX_RTC_Init();
 1214              		.loc 1 160 3 view .LVU384
 1215 0018 FFF7FEFF 		bl	MX_DMA_Init
 1216              	.LVL56:
 161:Core/Src/main.c ****   MX_USART3_UART_Init();
 1217              		.loc 1 161 3 view .LVU385
 1218 001c FFF7FEFF 		bl	MX_RTC_Init
 1219              	.LVL57:
 162:Core/Src/main.c ****   MX_USB_PCD_Init();
 1220              		.loc 1 162 3 view .LVU386
 1221 0020 FFF7FEFF 		bl	MX_USART3_UART_Init
 1222              	.LVL58:
 163:Core/Src/main.c ****   MX_TIM2_Init();
 1223              		.loc 1 163 3 view .LVU387
 1224 0024 FFF7FEFF 		bl	MX_USB_PCD_Init
 1225              	.LVL59:
 164:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1226              		.loc 1 164 3 view .LVU388
 1227 0028 FFF7FEFF 		bl	MX_TIM2_Init
 1228              	.LVL60:
ARM GAS  C:\Temp\cc5NKWQB.s 			page 39


 166:Core/Src/main.c ****   while (calibrated != 1){
 1229              		.loc 1 166 3 view .LVU389
 1230 002c FFF7FEFF 		bl	initIKS02A1
 1231              	.LVL61:
 167:Core/Src/main.c ****     initialCalibration();
 1232              		.loc 1 167 3 view .LVU390
 167:Core/Src/main.c ****     initialCalibration();
 1233              		.loc 1 167 9 is_stmt 0 view .LVU391
 1234 0030 01E0     		b	.L69
 1235              	.L70:
 168:Core/Src/main.c ****   }
 1236              		.loc 1 168 5 is_stmt 1 view .LVU392
 1237 0032 FFF7FEFF 		bl	initialCalibration
 1238              	.LVL62:
 1239              	.L69:
 167:Core/Src/main.c ****     initialCalibration();
 1240              		.loc 1 167 21 view .LVU393
 1241 0036 044B     		ldr	r3, .L73+4
 1242 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 003a 012B     		cmp	r3, #1
 1244 003c F9D1     		bne	.L70
 1245              	.L71:
 176:Core/Src/main.c ****   {
 1246              		.loc 1 176 3 discriminator 1 view .LVU394
 178:Core/Src/main.c ****   
 1247              		.loc 1 178 5 discriminator 1 view .LVU395
 1248 003e FFF7FEFF 		bl	getIKS02A1
 1249              	.LVL63:
 176:Core/Src/main.c ****   {
 1250              		.loc 1 176 9 discriminator 1 view .LVU396
 1251 0042 FCE7     		b	.L71
 1252              	.L74:
 1253              		.align	2
 1254              	.L73:
 1255 0044 00040048 		.word	1207960576
 1256 0048 00000000 		.word	calibrated
 1257              		.cfi_endproc
 1258              	.LFE132:
 1260              		.global	counter
 1261              		.section	.bss.counter,"aw",%nobits
 1262              		.align	2
 1265              	counter:
 1266 0000 00000000 		.space	4
 1267              		.global	calibrated
 1268              		.section	.bss.calibrated,"aw",%nobits
 1271              	calibrated:
 1272 0000 00       		.space	1
 1273              		.global	clearToSend
 1274              		.section	.bss.clearToSend,"aw",%nobits
 1277              	clearToSend:
 1278 0000 00       		.space	1
 1279              		.global	bigBuffer
 1280              		.section	.bss.bigBuffer,"aw",%nobits
 1281              		.align	2
 1284              	bigBuffer:
 1285 0000 00000000 		.space	14
 1285      00000000 
ARM GAS  C:\Temp\cc5NKWQB.s 			page 40


 1285      00000000 
 1285      0000
 1286              		.global	numberOfSimulinkBytes
 1287              		.section	.rodata.numberOfSimulinkBytes,"a"
 1288              		.align	2
 1291              	numberOfSimulinkBytes:
 1292 0000 08000000 		.word	8
 1293              		.global	expectedTerminator
 1294              		.section	.rodata.expectedTerminator,"a"
 1295              		.align	2
 1298              	expectedTerminator:
 1299 0000 415F4A   		.ascii	"A_J"
 1300              		.global	expectedHeader
 1301              		.section	.rodata.expectedHeader,"a"
 1302              		.align	2
 1305              	expectedHeader:
 1306 0000 4A5F41   		.ascii	"J_A"
 1307              		.global	mag_axis
 1308              		.section	.bss.mag_axis,"aw",%nobits
 1309              		.align	2
 1312              	mag_axis:
 1313 0000 00000000 		.space	12
 1313      00000000 
 1313      00000000 
 1314              		.global	accel2_axis
 1315              		.section	.bss.accel2_axis,"aw",%nobits
 1316              		.align	2
 1319              	accel2_axis:
 1320 0000 00000000 		.space	12
 1320      00000000 
 1320      00000000 
 1321              		.global	gyro_axis
 1322              		.section	.bss.gyro_axis,"aw",%nobits
 1323              		.align	2
 1326              	gyro_axis:
 1327 0000 00000000 		.space	12
 1327      00000000 
 1327      00000000 
 1328              		.global	accel1_axis
 1329              		.section	.bss.accel1_axis,"aw",%nobits
 1330              		.align	2
 1333              	accel1_axis:
 1334 0000 00000000 		.space	12
 1334      00000000 
 1334      00000000 
 1335              		.global	hpcd_USB_FS
 1336              		.section	.bss.hpcd_USB_FS,"aw",%nobits
 1337              		.align	2
 1340              	hpcd_USB_FS:
 1341 0000 00000000 		.space	724
 1341      00000000 
 1341      00000000 
 1341      00000000 
 1341      00000000 
 1342              		.global	hdma_usart3_rx
 1343              		.section	.bss.hdma_usart3_rx,"aw",%nobits
 1344              		.align	2
ARM GAS  C:\Temp\cc5NKWQB.s 			page 41


 1347              	hdma_usart3_rx:
 1348 0000 00000000 		.space	68
 1348      00000000 
 1348      00000000 
 1348      00000000 
 1348      00000000 
 1349              		.global	huart3
 1350              		.section	.bss.huart3,"aw",%nobits
 1351              		.align	2
 1354              	huart3:
 1355 0000 00000000 		.space	136
 1355      00000000 
 1355      00000000 
 1355      00000000 
 1355      00000000 
 1356              		.global	htim2
 1357              		.section	.bss.htim2,"aw",%nobits
 1358              		.align	2
 1361              	htim2:
 1362 0000 00000000 		.space	76
 1362      00000000 
 1362      00000000 
 1362      00000000 
 1362      00000000 
 1363              		.global	hrtc
 1364              		.section	.bss.hrtc,"aw",%nobits
 1365              		.align	2
 1368              	hrtc:
 1369 0000 00000000 		.space	32
 1369      00000000 
 1369      00000000 
 1369      00000000 
 1369      00000000 
 1370              		.text
 1371              	.Letext0:
 1372              		.file 3 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 1373              		.file 4 "c:\\users\\jessejabezarendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-
 1374              		.file 5 "c:\\users\\jessejabezarendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-
 1375              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1376              		.file 7 "c:\\users\\jessejabezarendse\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-
 1377              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1378              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1379              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1380              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1381              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1382              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_ll_usb.h"
 1383              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pcd.h"
 1384              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc.h"
 1385              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1386              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1387              		.file 18 "Drivers/BSP/IKS02A1/iks02a1_motion_sensors.h"
 1388              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 1389              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1390              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1391              		.file 22 "Core/Inc/IKS02A1_Simulink.h"
 1392              		.file 23 "<built-in>"
ARM GAS  C:\Temp\cc5NKWQB.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
  C:\Temp\cc5NKWQB.s:21     .text.MX_GPIO_Init:00000000 $t
  C:\Temp\cc5NKWQB.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
  C:\Temp\cc5NKWQB.s:383    .text.MX_GPIO_Init:000001b0 $d
  C:\Temp\cc5NKWQB.s:395    .text.MX_DMA_Init:00000000 $t
  C:\Temp\cc5NKWQB.s:400    .text.MX_DMA_Init:00000000 MX_DMA_Init
  C:\Temp\cc5NKWQB.s:445    .text.MX_DMA_Init:00000030 $d
  C:\Temp\cc5NKWQB.s:450    .text.configureTimer:00000000 $t
  C:\Temp\cc5NKWQB.s:456    .text.configureTimer:00000000 configureTimer
  C:\Temp\cc5NKWQB.s:523    .text.configureTimer:00000050 $d
  C:\Temp\cc5NKWQB.s:529    .text.initialCalibration:00000000 $t
  C:\Temp\cc5NKWQB.s:535    .text.initialCalibration:00000000 initialCalibration
  C:\Temp\cc5NKWQB.s:624    .text.initialCalibration:00000068 $d
  C:\Temp\cc5NKWQB.s:1284   .bss.bigBuffer:00000000 bigBuffer
  C:\Temp\cc5NKWQB.s:1354   .bss.huart3:00000000 huart3
  C:\Temp\cc5NKWQB.s:1271   .bss.calibrated:00000000 calibrated
  C:\Temp\cc5NKWQB.s:1361   .bss.htim2:00000000 htim2
  C:\Temp\cc5NKWQB.s:634    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
  C:\Temp\cc5NKWQB.s:640    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
  C:\Temp\cc5NKWQB.s:673    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
  C:\Temp\cc5NKWQB.s:678    .text.Error_Handler:00000000 $t
  C:\Temp\cc5NKWQB.s:684    .text.Error_Handler:00000000 Error_Handler
  C:\Temp\cc5NKWQB.s:716    .text.MX_RTC_Init:00000000 $t
  C:\Temp\cc5NKWQB.s:721    .text.MX_RTC_Init:00000000 MX_RTC_Init
  C:\Temp\cc5NKWQB.s:772    .text.MX_RTC_Init:00000028 $d
  C:\Temp\cc5NKWQB.s:1368   .bss.hrtc:00000000 hrtc
  C:\Temp\cc5NKWQB.s:778    .text.MX_USART3_UART_Init:00000000 $t
  C:\Temp\cc5NKWQB.s:783    .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
  C:\Temp\cc5NKWQB.s:846    .text.MX_USART3_UART_Init:0000003c $d
  C:\Temp\cc5NKWQB.s:852    .text.MX_USB_PCD_Init:00000000 $t
  C:\Temp\cc5NKWQB.s:857    .text.MX_USB_PCD_Init:00000000 MX_USB_PCD_Init
  C:\Temp\cc5NKWQB.s:908    .text.MX_USB_PCD_Init:00000028 $d
  C:\Temp\cc5NKWQB.s:1340   .bss.hpcd_USB_FS:00000000 hpcd_USB_FS
  C:\Temp\cc5NKWQB.s:914    .text.MX_TIM2_Init:00000000 $t
  C:\Temp\cc5NKWQB.s:919    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
  C:\Temp\cc5NKWQB.s:1019   .text.MX_TIM2_Init:00000064 $d
  C:\Temp\cc5NKWQB.s:1024   .text.SystemClock_Config:00000000 $t
  C:\Temp\cc5NKWQB.s:1030   .text.SystemClock_Config:00000000 SystemClock_Config
  C:\Temp\cc5NKWQB.s:1177   .text.SystemClock_Config:00000098 $d
  C:\Temp\cc5NKWQB.s:1182   .text.main:00000000 $t
  C:\Temp\cc5NKWQB.s:1188   .text.main:00000000 main
  C:\Temp\cc5NKWQB.s:1255   .text.main:00000044 $d
  C:\Temp\cc5NKWQB.s:1265   .bss.counter:00000000 counter
  C:\Temp\cc5NKWQB.s:1262   .bss.counter:00000000 $d
  C:\Temp\cc5NKWQB.s:1272   .bss.calibrated:00000000 $d
  C:\Temp\cc5NKWQB.s:1277   .bss.clearToSend:00000000 clearToSend
  C:\Temp\cc5NKWQB.s:1278   .bss.clearToSend:00000000 $d
  C:\Temp\cc5NKWQB.s:1281   .bss.bigBuffer:00000000 $d
  C:\Temp\cc5NKWQB.s:1291   .rodata.numberOfSimulinkBytes:00000000 numberOfSimulinkBytes
  C:\Temp\cc5NKWQB.s:1288   .rodata.numberOfSimulinkBytes:00000000 $d
  C:\Temp\cc5NKWQB.s:1298   .rodata.expectedTerminator:00000000 expectedTerminator
  C:\Temp\cc5NKWQB.s:1295   .rodata.expectedTerminator:00000000 $d
  C:\Temp\cc5NKWQB.s:1305   .rodata.expectedHeader:00000000 expectedHeader
  C:\Temp\cc5NKWQB.s:1302   .rodata.expectedHeader:00000000 $d
  C:\Temp\cc5NKWQB.s:1312   .bss.mag_axis:00000000 mag_axis
  C:\Temp\cc5NKWQB.s:1309   .bss.mag_axis:00000000 $d
ARM GAS  C:\Temp\cc5NKWQB.s 			page 43


  C:\Temp\cc5NKWQB.s:1319   .bss.accel2_axis:00000000 accel2_axis
  C:\Temp\cc5NKWQB.s:1316   .bss.accel2_axis:00000000 $d
  C:\Temp\cc5NKWQB.s:1326   .bss.gyro_axis:00000000 gyro_axis
  C:\Temp\cc5NKWQB.s:1323   .bss.gyro_axis:00000000 $d
  C:\Temp\cc5NKWQB.s:1333   .bss.accel1_axis:00000000 accel1_axis
  C:\Temp\cc5NKWQB.s:1330   .bss.accel1_axis:00000000 $d
  C:\Temp\cc5NKWQB.s:1337   .bss.hpcd_USB_FS:00000000 $d
  C:\Temp\cc5NKWQB.s:1347   .bss.hdma_usart3_rx:00000000 hdma_usart3_rx
  C:\Temp\cc5NKWQB.s:1344   .bss.hdma_usart3_rx:00000000 $d
  C:\Temp\cc5NKWQB.s:1351   .bss.huart3:00000000 $d
  C:\Temp\cc5NKWQB.s:1358   .bss.htim2:00000000 $d
  C:\Temp\cc5NKWQB.s:1365   .bss.hrtc:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Receive
receivedFromSimulink
HAL_TIM_Base_Start_IT
accel2_odr
HAL_IncTick
HAL_RTC_Init
HAL_UART_Init
HAL_PCD_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
initIKS02A1
getIKS02A1
